type: custom:auto-entities
card:
  square: false
  type: grid
  columns: 2
  title: PLA
card_param: cards
sort:
  method: name
  reverse: false
filter:
  template: >-
    {%- set filterType = 'PLA' %} # МЕНЯЕТЕ НА НУЖНЫЙ ТИП
    {%- set callService = 'bambu_lab.%model%_%serial%_change_filament_spool_ams' %} # МЕНЯЕТЕ НА СВОЙ СЕРВИС
    
    
    {%- set
    printer_id = callService.split('.')[1].split('_')[0] + "_" +
                         callService.split('.')[1].split('_')[1] %}
    {% set entities = states.sensor | selectattr('attributes.archived',
    'equalto', false) 
        | selectattr('attributes.filament_material', 'equalto', filterType) 
        | list %}
        
    {% for sensor in entities -%}
      {%- set friendly_name = state_attr(sensor.entity_id, 'friendly_name') %}
      {%- set color_name = "#" + state_attr(sensor.entity_id, 'filament_color_hex')+"FF" %}
      {%- set type = state_attr(sensor.entity_id, 'filament_material') %}
      {%- set cardAms = namespace(cards=[]) %}
      {%- for ams_id in range(1, 5) %}
        {%- set cardAmsTray = namespace(cards=[]) %}

        {%- for tray in range(1, 5) %}
          {%- set amsEntity = 'sensor.' + printer_id + '_ams_'+ams_id|string+'_tray_' + tray|string %}
          {%- set colortray = state_attr(amsEntity, 'color')|lower %}
          {%- set current_color = '' -%}
          {%- if colortray != 'none' %}
            {%- set current_color = colortray | regex_replace("#","") -%}
            {%- set red = current_color[0:2] | int(base=16) -%}
            {%- set green = current_color[2:4] | int(base=16) -%}
            {%- set blue = current_color[4:6] | int(base=16) -%} 
            {%- set current_color = "rgba("+(255-red)|string+","+(255-green)|string+","+(255-blue)|string+", 1)" -%} 
          {%- endif %}
          
          
          {%- set cardAmsTray.cards = cardAmsTray.cards + [
            {
                  'type': 'custom:bubble-card',
                  'card_type': 'button',
                  'entity': 'input_button.ams',
                  'icon': 'mdi:numeric-'+ tray|string + '-circle',
                  'name': "Tray "+ams_id|string +'/'+ tray|string,
                  'styles': ".bubble-button-card-container {background-color: "+colortray+"} .bubble-name {color: "+current_color+"}",
                  'button_action': {
                    'tap_action': {
                      'action': 'call-service',
                      'service': 'script.multi_tap_action',
                      'service_data': {
                        'actions': [
                            {
                              'service': callService,
                              'data': {
                                'ams': (ams_id - 1),
                                'tray': (tray - 1),
                                'type': type,
                                'color': color_name
                              }
                            },
                            {
                              'service': 'browser_mod.close_popup',
                              'data': {
                                'deviceID': 'this'
                              }
                            }
                        ]
                      }
                    }
                  },
                }
            ] %}
        {%- endfor %}
        
        {%- if states('sensor.' + printer_id + '_ams_'+ams_id|string+'_humidity_index') != 'unknown' %}
            {%- set cardAms.cards = cardAms.cards + [
            {
                  'type': 'custom:bubble-card',
                  'card_type': 'separator',
                  'icon': 'fapro:filament-2',
                  'name': "AMS "+ams_id|string+":",
            },
            {
            'type': 'horizontal-stack',
              'cards': cardAmsTray.cards
              }
            ] %}
          {%- endif %}
      {%- endfor %}
      
      {%- if friendly_name is not none and sensor.state != 'unavailable' and sensor.state | float > 0 -%}
      
        {%- set badge_icon_list = namespace(icon=None, additional_color=None, number='') %}
        {%- for tray in range(1, 5) %}
          {%- set tray_sensor = 'sensor.' + printer_id + '_ams_1_tray_' + tray|string %}
           {%- if tray_sensor is not none and 
                state_attr(tray_sensor, 'type')|lower == filterType|lower and 
                state_attr(tray_sensor, 'color')|lower == color_name|lower %}
            {%- set badge_icon_list.additional_color = '#33ff002b' %}
            {%- set badge_icon_list.icon = 'mdi:numeric-'+ tray|string + '-circle' %}
            {%- set badge_icon_list.number = "("+tray|string+") " %}
            {%- break %}
          {%- endif %}
        {%- endfor %}
        {%- set tray_sensor = 'sensor.' + printer_id + '_externalspool_external_spool' %}
           {%- if tray_sensor is not none and 
                state_attr(tray_sensor, 'type')|lower == filterType|lower and 
                state_attr(tray_sensor, 'color')|lower == color_name|lower %}
            {%- set badge_icon_list.additional_color = '#00ff002b' %}
            {%- set badge_icon_list.icon = 'mdi:numeric-0-circle' %}
           {%- endif %}
      
        {%- set truncated_friendly_name = friendly_name.split('_', 1)[0] if ' ' in friendly_name else friendly_name -%}
        {{
            {
              'type': 'custom:mushroom-template-card',
              'primary': badge_icon_list.number|string + truncated_friendly_name,
              'secondary': sensor.state + ' грамм',
              'icon': 'phu:3d-filament',
              'badge_icon': badge_icon_list.icon,
              'badge_color': 'black',
              'icon_color': color_name,
              'card_mod': {
                'style': 'ha-card {background-color:' +badge_icon_list.additional_color|string + '}'
              },
              'tap_action': {
                'action': 'fire-dom-event',
                'browser_mod': {
                  'service': 'browser_mod.popup',
                  'data': {
                    'right_button': 'Close',
                    'right_button_action': 'Close',
                    'title': friendly_name,
                    'content': {
                      'type': 'vertical-stack',
                      'cards': [
                        {
                              'type': 'custom:button-card',
                              'name': "Тип: " +type + "<br>Цвет: " + color_name,
                              'color_type': "card",
                              'color': color_name,
                              'tap_action': 'none'
                        },
                        {
                          'type': 'custom:bubble-card',
                          'card_type': 'separator',
                          'icon': 'mdi:alert',
                          'name': "Выберите ячейку, в которую установить данную катушку:",
                        },
                        {
                          'type': 'custom:bubble-card',
                          'card_type': 'button',
                          'entity': 'input_button.ams',
                          'name': 'Внешняя',
                            'styles': {
                              'card': [{
                                'height': '50px'
                              }],
                            },
                          'button_action': {
                             'tap_action': {
                              'action': 'call-service',
                              'service': 'script.multi_tap_action',
                              'service_data':{
                                'actions':[
                                  {
                                    'service': callService,
                                    'data': {
                                      'ams': 255,
                                      'tray': 254,
                                      'type': type,
                                      'color': color_name
                                    }
                                  },
                                  {
                                    'service': 'browser_mod.close_popup',
                                    'data': {
                                      'deviceID': 'this'
                                    }
                                  }
                                ]
                              }
                            } 
                          },
                        },
                        {
                          'type': 'vertical-stack',
                          'cards': cardAms.cards
                        }
                      ]
                    }
                  },
                  'deviceID': 'this',
                }
              }
            }
        }},
      {%- endif -%}
    {%- endfor %}
show_empty: false
